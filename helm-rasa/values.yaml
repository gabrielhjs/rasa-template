# -- number of replicas to deploy
replicaCount: 1
image:
  # -- registry where the HAPI FHIR server image is hosted
  registry: docker.io
  # -- the path inside the repository
  repository: laurabot/gates-asistant
  # -- the image tag. As of v5.7.0, this is the `distroless` flavor by default, add `-tomcat` to use the Tomcat-based image.
  tag: ""
  # tag: "v6.2.1@sha256:8d1b4c1c8abd613f685267a3dda494d87aba4cff449eed39902a6ece2c086f3c"
  # -- image pullPolicy to use
  pullPolicy: IfNotPresent
# -- image pull secrets to use when pulling the image
imagePullSecrets: []
# -- override the chart name
nameOverride: ""
# -- override the chart fullname
fullnameOverride: ""
# -- annotations applied to the server deployment
deploymentAnnotations: {}
# -- annotations applied to the server pod
podAnnotations: {}
# -- pod security context
podSecurityContext: {}
# fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  privileged: false
  readOnlyRootFilesystem: false
  runAsGroup: 1001
  runAsNonRoot: true
  runAsUser: 1001
# service to expose the server
service:
  # -- service type
  type: ClusterIP
  # -- port where the server will be exposed at
  port: 80
  internalPort: 5005
ingress:
  # -- whether to create an Ingress to expose the FHIR server HTTP endpoint
  enabled: false
  # -- provide any additional annotations which may be required. Evaluated as a template.
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host:  chart-example.local
      pathType: ImplementationSpecific
      paths: ["/"]
  # -- ingress TLS config
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

# -- node selector for the pod
nodeSelector: {}
# -- pod tolerations
tolerations: []
# -- pod affinity
affinity: {}
# -- pod topology spread configuration
# see: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#api
topologySpreadConstraints: []
# - maxSkew: 1
#   topologyKey: topology.kubernetes.io/zone
#   whenUnsatisfiable: ScheduleAnyway
#   labelSelector:
#     matchLabels:
#       app.kubernetes.io/instance: hapi-fhir-jpaserver
#       app.kubernetes.io/name: hapi-fhir-jpaserver

readinessProbe:
  failureThreshold: 5
  initialDelaySeconds: 30
  periodSeconds: 20
  successThreshold: 1
  timeoutSeconds: 20
  path: "/"
startupProbe:
  failureThreshold: 10
  initialDelaySeconds: 30
  periodSeconds: 30
  successThreshold: 1
  timeoutSeconds: 30
  path: "/"
livenessProbe:
  failureThreshold: 5
  initialDelaySeconds: 30
  periodSeconds: 20
  successThreshold: 1
  timeoutSeconds: 30
  path: "/"

# -- extra environment variables to set on the server container
extraEnv: []
# - name: SPRING_FLYWAY_BASELINE_ON_MIGRATE
#   value: "true"

podDisruptionBudget:
  # -- Enable PodDisruptionBudget for the server pods.
  # uses policy/v1/PodDisruptionBudget thus requiring k8s 1.21+
  enabled: false
  # -- minimum available instances
  minAvailable: 1
  # -- maximum unavailable instances
  maxUnavailable: ""

env:
  BUCKET_NAME: gates-assistant
  MONGODB_DATABASE: gates-assistant
  REDIS_DB: "0"

secrets:
  aws-secrets:
    - name: AWS_SECRET_ACCESS_KEY
      alias: AWS_SECRET_ACCESS_KEY
    - name: AWS_ACCESS_KEY_ID
      alias: AWS_ACCESS_KEY_ID
    - name: AWS_DEFAULT_REGION
      alias: AWS_DEFAULT_REGION

  redis-secrets:
    - name: REDIS_HOST
      alias: REDIS_HOST
    - name: REDIS_PORT
      alias: REDIS_PORT
    - name: REDIS_PASSWORD
      alias: REDIS_PASSWORD

  mongo-secrets:
    - name: MONGODB_URL
      alias: MONGODB_URL
    - name: MONGODB_GATES_ASSISTANT_USERNAME
      alias: MONGODB_GATES_ASSISTANT_USERNAME
    - name: MONGODB_GATES_ASSISTANT_PASSWORD
      alias: MONGODB_GATES_ASSISTANT_PASSWORD
    - name: MONGODB_GATES_ASSISTANT_AUTH_SOURCE
      alias: MONGODB_GATES_ASSISTANT_AUTH_SOURCE
  
  gates-assistant-secrets:
    - name: ACTION_ENDPOINT
      alias: ACTION_ENDPOINT

  rabbitmq-secrets:
    - name: RABBITMQ_URL
      alias: RABBITMQ_URL
    - name: RABBITMQ_USERNAME
      alias: RABBITMQ_USERNAME
    - name: RABBITMQ_PASSWORD
      alias: RABBITMQ_PASSWORD
    - name: RABBITMQ_EXCHANGE
      alias: RABBITMQ_EXCHANGE

  rocketchat-secrets:
    - name: ROCKETCHAT_USER
      alias: ROCKETCHAT_USER
    - name: ROCKETCHAT_PASSWORD
      alias: ROCKETCHAT_PASSWORD
    - name: ROCKETCHAT_HOST
      alias: ROCKETCHAT_HOST
  
  duckling_url:
    - name: DUCKLING_URL
      alias: DUCKLING_URL
  
  mongodb-secrets:
    - name: DB_LAURA_CARE_BOTS_URL
      alias: DOCUMENTDB_URL
    - name: DB_LAURA_CARE_BOTS_DATABASE
      alias: DOCUMENTDB_DATABASE
    - name: DB_LAURA_CARE_BOTS_PASSWORD
      alias: DOCUMENTDB_PASSWORD
    - name: DB_LAURA_CARE_BOTS_USERNAME
      alias: DOCUMENTDB_USERNAME
